// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: engine/engine.proto

package enginepb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type InternalEngineStatus int32

const (
	InternalEngineStatus_INTERNAL_ENGINE__SUCCESS InternalEngineStatus = 0 //服务正常
	InternalEngineStatus_INTERNAL_ENGINE__ERROR   InternalEngineStatus = 1 //服务异常
)

// Enum value maps for InternalEngineStatus.
var (
	InternalEngineStatus_name = map[int32]string{
		0: "INTERNAL_ENGINE__SUCCESS",
		1: "INTERNAL_ENGINE__ERROR",
	}
	InternalEngineStatus_value = map[string]int32{
		"INTERNAL_ENGINE__SUCCESS": 0,
		"INTERNAL_ENGINE__ERROR":   1,
	}
)

func (x InternalEngineStatus) Enum() *InternalEngineStatus {
	p := new(InternalEngineStatus)
	*p = x
	return p
}

func (x InternalEngineStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InternalEngineStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_engine_engine_proto_enumTypes[0].Descriptor()
}

func (InternalEngineStatus) Type() protoreflect.EnumType {
	return &file_engine_engine_proto_enumTypes[0]
}

func (x InternalEngineStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InternalEngineStatus.Descriptor instead.
func (InternalEngineStatus) EnumDescriptor() ([]byte, []int) {
	return file_engine_engine_proto_rawDescGZIP(), []int{0}
}

type Dimension int32

const (
	Dimension_K1M  Dimension = 0
	Dimension_K5M  Dimension = 1
	Dimension_K15M Dimension = 2
	Dimension_K30M Dimension = 3
	Dimension_K1H  Dimension = 4
	Dimension_K24H Dimension = 5
)

// Enum value maps for Dimension.
var (
	Dimension_name = map[int32]string{
		0: "K1M",
		1: "K5M",
		2: "K15M",
		3: "K30M",
		4: "K1H",
		5: "K24H",
	}
	Dimension_value = map[string]int32{
		"K1M":  0,
		"K5M":  1,
		"K15M": 2,
		"K30M": 3,
		"K1H":  4,
		"K24H": 5,
	}
)

func (x Dimension) Enum() *Dimension {
	p := new(Dimension)
	*p = x
	return p
}

func (x Dimension) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Dimension) Descriptor() protoreflect.EnumDescriptor {
	return file_engine_engine_proto_enumTypes[1].Descriptor()
}

func (Dimension) Type() protoreflect.EnumType {
	return &file_engine_engine_proto_enumTypes[1]
}

func (x Dimension) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Dimension.Descriptor instead.
func (Dimension) EnumDescriptor() ([]byte, []int) {
	return file_engine_engine_proto_rawDescGZIP(), []int{1}
}

type Direction int32

const (
	Direction_BUY  Direction = 0
	Direction_SELL Direction = 1
)

// Enum value maps for Direction.
var (
	Direction_name = map[int32]string{
		0: "BUY",
		1: "SELL",
	}
	Direction_value = map[string]int32{
		"BUY":  0,
		"SELL": 1,
	}
)

func (x Direction) Enum() *Direction {
	p := new(Direction)
	*p = x
	return p
}

func (x Direction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Direction) Descriptor() protoreflect.EnumDescriptor {
	return file_engine_engine_proto_enumTypes[2].Descriptor()
}

func (Direction) Type() protoreflect.EnumType {
	return &file_engine_engine_proto_enumTypes[2]
}

func (x Direction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Direction.Descriptor instead.
func (Direction) EnumDescriptor() ([]byte, []int) {
	return file_engine_engine_proto_rawDescGZIP(), []int{2}
}

type Dex struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chain   string `protobuf:"bytes,1,opt,name=chain,proto3" json:"chain,omitempty"`
	Dex     string `protobuf:"bytes,2,opt,name=dex,proto3" json:"dex,omitempty"`
	Version string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *Dex) Reset() {
	*x = Dex{}
	if protoimpl.UnsafeEnabled {
		mi := &file_engine_engine_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Dex) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dex) ProtoMessage() {}

func (x *Dex) ProtoReflect() protoreflect.Message {
	mi := &file_engine_engine_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dex.ProtoReflect.Descriptor instead.
func (*Dex) Descriptor() ([]byte, []int) {
	return file_engine_engine_proto_rawDescGZIP(), []int{0}
}

func (x *Dex) GetChain() string {
	if x != nil {
		return x.Chain
	}
	return ""
}

func (x *Dex) GetDex() string {
	if x != nil {
		return x.Dex
	}
	return ""
}

func (x *Dex) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type Ping struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimeStamp   int64  `protobuf:"varint,1,opt,name=time_stamp,json=timeStamp,proto3" json:"time_stamp,omitempty"`
	PingMessage string `protobuf:"bytes,2,opt,name=ping_message,json=pingMessage,proto3" json:"ping_message,omitempty"`
}

func (x *Ping) Reset() {
	*x = Ping{}
	if protoimpl.UnsafeEnabled {
		mi := &file_engine_engine_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ping) ProtoMessage() {}

func (x *Ping) ProtoReflect() protoreflect.Message {
	mi := &file_engine_engine_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ping.ProtoReflect.Descriptor instead.
func (*Ping) Descriptor() ([]byte, []int) {
	return file_engine_engine_proto_rawDescGZIP(), []int{1}
}

func (x *Ping) GetTimeStamp() int64 {
	if x != nil {
		return x.TimeStamp
	}
	return 0
}

func (x *Ping) GetPingMessage() string {
	if x != nil {
		return x.PingMessage
	}
	return ""
}

type Hot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TokenName    string  `protobuf:"bytes,2,opt,name=token_name,json=tokenName,proto3" json:"token_name,omitempty"`
	TokenAddress string  `protobuf:"bytes,3,opt,name=token_address,json=tokenAddress,proto3" json:"token_address,omitempty"`
	Price        float64 `protobuf:"fixed64,4,opt,name=price,proto3" json:"price,omitempty"`
	Increase_24H float64 `protobuf:"fixed64,5,opt,name=increase_24h,json=increase24h,proto3" json:"increase_24h,omitempty"`
	Increase_7D  float64 `protobuf:"fixed64,6,opt,name=increase_7d,json=increase7d,proto3" json:"increase_7d,omitempty"`
	Increase_30D float64 `protobuf:"fixed64,7,opt,name=increase_30d,json=increase30d,proto3" json:"increase_30d,omitempty"`
	Volume       float64 `protobuf:"fixed64,8,opt,name=volume,proto3" json:"volume,omitempty"`
	Dex          *Dex    `protobuf:"bytes,9,opt,name=dex,proto3" json:"dex,omitempty"`
}

func (x *Hot) Reset() {
	*x = Hot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_engine_engine_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Hot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Hot) ProtoMessage() {}

func (x *Hot) ProtoReflect() protoreflect.Message {
	mi := &file_engine_engine_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Hot.ProtoReflect.Descriptor instead.
func (*Hot) Descriptor() ([]byte, []int) {
	return file_engine_engine_proto_rawDescGZIP(), []int{2}
}

func (x *Hot) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Hot) GetTokenName() string {
	if x != nil {
		return x.TokenName
	}
	return ""
}

func (x *Hot) GetTokenAddress() string {
	if x != nil {
		return x.TokenAddress
	}
	return ""
}

func (x *Hot) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Hot) GetIncrease_24H() float64 {
	if x != nil {
		return x.Increase_24H
	}
	return 0
}

func (x *Hot) GetIncrease_7D() float64 {
	if x != nil {
		return x.Increase_7D
	}
	return 0
}

func (x *Hot) GetIncrease_30D() float64 {
	if x != nil {
		return x.Increase_30D
	}
	return 0
}

func (x *Hot) GetVolume() float64 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (x *Hot) GetDex() *Dex {
	if x != nil {
		return x.Dex
	}
	return nil
}

type HotList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hot []*Hot `protobuf:"bytes,1,rep,name=hot,proto3" json:"hot,omitempty"`
}

func (x *HotList) Reset() {
	*x = HotList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_engine_engine_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HotList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HotList) ProtoMessage() {}

func (x *HotList) ProtoReflect() protoreflect.Message {
	mi := &file_engine_engine_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HotList.ProtoReflect.Descriptor instead.
func (*HotList) Descriptor() ([]byte, []int) {
	return file_engine_engine_proto_rawDescGZIP(), []int{3}
}

func (x *HotList) GetHot() []*Hot {
	if x != nil {
		return x.Hot
	}
	return nil
}

type SubscribeHotRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SubscribeHotRequest) Reset() {
	*x = SubscribeHotRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_engine_engine_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeHotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeHotRequest) ProtoMessage() {}

func (x *SubscribeHotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_engine_engine_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeHotRequest.ProtoReflect.Descriptor instead.
func (*SubscribeHotRequest) Descriptor() ([]byte, []int) {
	return file_engine_engine_proto_rawDescGZIP(), []int{4}
}

type SubscribeHotResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status InternalEngineStatus `protobuf:"varint,1,opt,name=status,proto3,enum=engine.api.InternalEngineStatus" json:"status,omitempty"`
	// Types that are assignable to Msg:
	//	*SubscribeHotResponse_HotList
	//	*SubscribeHotResponse_Ping
	Msg isSubscribeHotResponse_Msg `protobuf_oneof:"msg"`
}

func (x *SubscribeHotResponse) Reset() {
	*x = SubscribeHotResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_engine_engine_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeHotResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeHotResponse) ProtoMessage() {}

func (x *SubscribeHotResponse) ProtoReflect() protoreflect.Message {
	mi := &file_engine_engine_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeHotResponse.ProtoReflect.Descriptor instead.
func (*SubscribeHotResponse) Descriptor() ([]byte, []int) {
	return file_engine_engine_proto_rawDescGZIP(), []int{5}
}

func (x *SubscribeHotResponse) GetStatus() InternalEngineStatus {
	if x != nil {
		return x.Status
	}
	return InternalEngineStatus_INTERNAL_ENGINE__SUCCESS
}

func (m *SubscribeHotResponse) GetMsg() isSubscribeHotResponse_Msg {
	if m != nil {
		return m.Msg
	}
	return nil
}

func (x *SubscribeHotResponse) GetHotList() *HotList {
	if x, ok := x.GetMsg().(*SubscribeHotResponse_HotList); ok {
		return x.HotList
	}
	return nil
}

func (x *SubscribeHotResponse) GetPing() *Ping {
	if x, ok := x.GetMsg().(*SubscribeHotResponse_Ping); ok {
		return x.Ping
	}
	return nil
}

type isSubscribeHotResponse_Msg interface {
	isSubscribeHotResponse_Msg()
}

type SubscribeHotResponse_HotList struct {
	HotList *HotList `protobuf:"bytes,2,opt,name=hot_list,json=hotList,proto3,oneof"`
}

type SubscribeHotResponse_Ping struct {
	Ping *Ping `protobuf:"bytes,3,opt,name=ping,proto3,oneof"`
}

func (*SubscribeHotResponse_HotList) isSubscribeHotResponse_Msg() {}

func (*SubscribeHotResponse_Ping) isSubscribeHotResponse_Msg() {}

type KLine struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimeStamp int64     `protobuf:"varint,1,opt,name=time_stamp,json=timeStamp,proto3" json:"time_stamp,omitempty"`
	Base      string    `protobuf:"bytes,2,opt,name=base,proto3" json:"base,omitempty"`
	Quote     string    `protobuf:"bytes,3,opt,name=quote,proto3" json:"quote,omitempty"`
	Open      float64   `protobuf:"fixed64,4,opt,name=open,proto3" json:"open,omitempty"`
	Close     float64   `protobuf:"fixed64,5,opt,name=close,proto3" json:"close,omitempty"`
	Low       float64   `protobuf:"fixed64,6,opt,name=low,proto3" json:"low,omitempty"`
	High      float64   `protobuf:"fixed64,7,opt,name=high,proto3" json:"high,omitempty"`
	Amount    float64   `protobuf:"fixed64,8,opt,name=amount,proto3" json:"amount,omitempty"`
	Volume    float64   `protobuf:"fixed64,9,opt,name=volume,proto3" json:"volume,omitempty"`
	Increase  float64   `protobuf:"fixed64,10,opt,name=increase,proto3" json:"increase,omitempty"`
	Amplitude float64   `protobuf:"fixed64,11,opt,name=amplitude,proto3" json:"amplitude,omitempty"`
	Dimension Dimension `protobuf:"varint,12,opt,name=dimension,proto3,enum=engine.api.Dimension" json:"dimension,omitempty"`
	Dex       *Dex      `protobuf:"bytes,13,opt,name=dex,proto3" json:"dex,omitempty"`
}

func (x *KLine) Reset() {
	*x = KLine{}
	if protoimpl.UnsafeEnabled {
		mi := &file_engine_engine_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KLine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KLine) ProtoMessage() {}

func (x *KLine) ProtoReflect() protoreflect.Message {
	mi := &file_engine_engine_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KLine.ProtoReflect.Descriptor instead.
func (*KLine) Descriptor() ([]byte, []int) {
	return file_engine_engine_proto_rawDescGZIP(), []int{6}
}

func (x *KLine) GetTimeStamp() int64 {
	if x != nil {
		return x.TimeStamp
	}
	return 0
}

func (x *KLine) GetBase() string {
	if x != nil {
		return x.Base
	}
	return ""
}

func (x *KLine) GetQuote() string {
	if x != nil {
		return x.Quote
	}
	return ""
}

func (x *KLine) GetOpen() float64 {
	if x != nil {
		return x.Open
	}
	return 0
}

func (x *KLine) GetClose() float64 {
	if x != nil {
		return x.Close
	}
	return 0
}

func (x *KLine) GetLow() float64 {
	if x != nil {
		return x.Low
	}
	return 0
}

func (x *KLine) GetHigh() float64 {
	if x != nil {
		return x.High
	}
	return 0
}

func (x *KLine) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *KLine) GetVolume() float64 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (x *KLine) GetIncrease() float64 {
	if x != nil {
		return x.Increase
	}
	return 0
}

func (x *KLine) GetAmplitude() float64 {
	if x != nil {
		return x.Amplitude
	}
	return 0
}

func (x *KLine) GetDimension() Dimension {
	if x != nil {
		return x.Dimension
	}
	return Dimension_K1M
}

func (x *KLine) GetDex() *Dex {
	if x != nil {
		return x.Dex
	}
	return nil
}

type KLineList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Kline []*KLine `protobuf:"bytes,1,rep,name=kline,proto3" json:"kline,omitempty"`
}

func (x *KLineList) Reset() {
	*x = KLineList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_engine_engine_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KLineList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KLineList) ProtoMessage() {}

func (x *KLineList) ProtoReflect() protoreflect.Message {
	mi := &file_engine_engine_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KLineList.ProtoReflect.Descriptor instead.
func (*KLineList) Descriptor() ([]byte, []int) {
	return file_engine_engine_proto_rawDescGZIP(), []int{7}
}

func (x *KLineList) GetKline() []*KLine {
	if x != nil {
		return x.Kline
	}
	return nil
}

type SubscribeKlineRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseToken  string    `protobuf:"bytes,1,opt,name=base_token,json=baseToken,proto3" json:"base_token,omitempty"`
	QuoteToken string    `protobuf:"bytes,2,opt,name=quote_token,json=quoteToken,proto3" json:"quote_token,omitempty"`
	Dimension  Dimension `protobuf:"varint,3,opt,name=dimension,proto3,enum=engine.api.Dimension" json:"dimension,omitempty"`
	Dex        *Dex      `protobuf:"bytes,4,opt,name=dex,proto3" json:"dex,omitempty"`
}

func (x *SubscribeKlineRequest) Reset() {
	*x = SubscribeKlineRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_engine_engine_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeKlineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeKlineRequest) ProtoMessage() {}

func (x *SubscribeKlineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_engine_engine_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeKlineRequest.ProtoReflect.Descriptor instead.
func (*SubscribeKlineRequest) Descriptor() ([]byte, []int) {
	return file_engine_engine_proto_rawDescGZIP(), []int{8}
}

func (x *SubscribeKlineRequest) GetBaseToken() string {
	if x != nil {
		return x.BaseToken
	}
	return ""
}

func (x *SubscribeKlineRequest) GetQuoteToken() string {
	if x != nil {
		return x.QuoteToken
	}
	return ""
}

func (x *SubscribeKlineRequest) GetDimension() Dimension {
	if x != nil {
		return x.Dimension
	}
	return Dimension_K1M
}

func (x *SubscribeKlineRequest) GetDex() *Dex {
	if x != nil {
		return x.Dex
	}
	return nil
}

type SubscribeKlineResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status InternalEngineStatus `protobuf:"varint,1,opt,name=status,proto3,enum=engine.api.InternalEngineStatus" json:"status,omitempty"`
	// Types that are assignable to Msg:
	//	*SubscribeKlineResponse_KlineList
	//	*SubscribeKlineResponse_Ping
	Msg isSubscribeKlineResponse_Msg `protobuf_oneof:"msg"`
}

func (x *SubscribeKlineResponse) Reset() {
	*x = SubscribeKlineResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_engine_engine_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeKlineResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeKlineResponse) ProtoMessage() {}

func (x *SubscribeKlineResponse) ProtoReflect() protoreflect.Message {
	mi := &file_engine_engine_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeKlineResponse.ProtoReflect.Descriptor instead.
func (*SubscribeKlineResponse) Descriptor() ([]byte, []int) {
	return file_engine_engine_proto_rawDescGZIP(), []int{9}
}

func (x *SubscribeKlineResponse) GetStatus() InternalEngineStatus {
	if x != nil {
		return x.Status
	}
	return InternalEngineStatus_INTERNAL_ENGINE__SUCCESS
}

func (m *SubscribeKlineResponse) GetMsg() isSubscribeKlineResponse_Msg {
	if m != nil {
		return m.Msg
	}
	return nil
}

func (x *SubscribeKlineResponse) GetKlineList() *KLineList {
	if x, ok := x.GetMsg().(*SubscribeKlineResponse_KlineList); ok {
		return x.KlineList
	}
	return nil
}

func (x *SubscribeKlineResponse) GetPing() *Ping {
	if x, ok := x.GetMsg().(*SubscribeKlineResponse_Ping); ok {
		return x.Ping
	}
	return nil
}

type isSubscribeKlineResponse_Msg interface {
	isSubscribeKlineResponse_Msg()
}

type SubscribeKlineResponse_KlineList struct {
	KlineList *KLineList `protobuf:"bytes,2,opt,name=kline_list,json=klineList,proto3,oneof"`
}

type SubscribeKlineResponse_Ping struct {
	Ping *Ping `protobuf:"bytes,3,opt,name=ping,proto3,oneof"`
}

func (*SubscribeKlineResponse_KlineList) isSubscribeKlineResponse_Msg() {}

func (*SubscribeKlineResponse_Ping) isSubscribeKlineResponse_Msg() {}

type Trade struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenName  string  `protobuf:"bytes,1,opt,name=token_name,json=tokenName,proto3" json:"token_name,omitempty"`
	Direction  string  `protobuf:"bytes,2,opt,name=direction,proto3" json:"direction,omitempty"`
	TimeStamp  int64   `protobuf:"varint,3,opt,name=time_stamp,json=timeStamp,proto3" json:"time_stamp,omitempty"`
	TxHash     string  `protobuf:"bytes,4,opt,name=tx_hash,json=txHash,proto3" json:"tx_hash,omitempty"`
	PriceUsd   float64 `protobuf:"fixed64,5,opt,name=price_usd,json=priceUsd,proto3" json:"price_usd,omitempty"`
	PriceEth   float64 `protobuf:"fixed64,6,opt,name=price_eth,json=priceEth,proto3" json:"price_eth,omitempty"`
	TotalValue float64 `protobuf:"fixed64,7,opt,name=total_value,json=totalValue,proto3" json:"total_value,omitempty"`
	Dex        *Dex    `protobuf:"bytes,8,opt,name=dex,proto3" json:"dex,omitempty"`
}

func (x *Trade) Reset() {
	*x = Trade{}
	if protoimpl.UnsafeEnabled {
		mi := &file_engine_engine_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Trade) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Trade) ProtoMessage() {}

func (x *Trade) ProtoReflect() protoreflect.Message {
	mi := &file_engine_engine_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Trade.ProtoReflect.Descriptor instead.
func (*Trade) Descriptor() ([]byte, []int) {
	return file_engine_engine_proto_rawDescGZIP(), []int{10}
}

func (x *Trade) GetTokenName() string {
	if x != nil {
		return x.TokenName
	}
	return ""
}

func (x *Trade) GetDirection() string {
	if x != nil {
		return x.Direction
	}
	return ""
}

func (x *Trade) GetTimeStamp() int64 {
	if x != nil {
		return x.TimeStamp
	}
	return 0
}

func (x *Trade) GetTxHash() string {
	if x != nil {
		return x.TxHash
	}
	return ""
}

func (x *Trade) GetPriceUsd() float64 {
	if x != nil {
		return x.PriceUsd
	}
	return 0
}

func (x *Trade) GetPriceEth() float64 {
	if x != nil {
		return x.PriceEth
	}
	return 0
}

func (x *Trade) GetTotalValue() float64 {
	if x != nil {
		return x.TotalValue
	}
	return 0
}

func (x *Trade) GetDex() *Dex {
	if x != nil {
		return x.Dex
	}
	return nil
}

type TradeList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Trade []*Trade `protobuf:"bytes,1,rep,name=trade,proto3" json:"trade,omitempty"`
}

func (x *TradeList) Reset() {
	*x = TradeList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_engine_engine_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TradeList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradeList) ProtoMessage() {}

func (x *TradeList) ProtoReflect() protoreflect.Message {
	mi := &file_engine_engine_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradeList.ProtoReflect.Descriptor instead.
func (*TradeList) Descriptor() ([]byte, []int) {
	return file_engine_engine_proto_rawDescGZIP(), []int{11}
}

func (x *TradeList) GetTrade() []*Trade {
	if x != nil {
		return x.Trade
	}
	return nil
}

type SubscribeTradeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dex        *Dex   `protobuf:"bytes,1,opt,name=dex,proto3" json:"dex,omitempty"`
	BaseToken  string `protobuf:"bytes,2,opt,name=base_token,json=baseToken,proto3" json:"base_token,omitempty"`
	QuoteToken string `protobuf:"bytes,3,opt,name=quote_token,json=quoteToken,proto3" json:"quote_token,omitempty"`
}

func (x *SubscribeTradeRequest) Reset() {
	*x = SubscribeTradeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_engine_engine_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeTradeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeTradeRequest) ProtoMessage() {}

func (x *SubscribeTradeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_engine_engine_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeTradeRequest.ProtoReflect.Descriptor instead.
func (*SubscribeTradeRequest) Descriptor() ([]byte, []int) {
	return file_engine_engine_proto_rawDescGZIP(), []int{12}
}

func (x *SubscribeTradeRequest) GetDex() *Dex {
	if x != nil {
		return x.Dex
	}
	return nil
}

func (x *SubscribeTradeRequest) GetBaseToken() string {
	if x != nil {
		return x.BaseToken
	}
	return ""
}

func (x *SubscribeTradeRequest) GetQuoteToken() string {
	if x != nil {
		return x.QuoteToken
	}
	return ""
}

type SubscribeTradeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status InternalEngineStatus `protobuf:"varint,1,opt,name=status,proto3,enum=engine.api.InternalEngineStatus" json:"status,omitempty"`
	// Types that are assignable to Msg:
	//	*SubscribeTradeResponse_TradeList
	//	*SubscribeTradeResponse_Ping
	Msg isSubscribeTradeResponse_Msg `protobuf_oneof:"msg"`
}

func (x *SubscribeTradeResponse) Reset() {
	*x = SubscribeTradeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_engine_engine_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeTradeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeTradeResponse) ProtoMessage() {}

func (x *SubscribeTradeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_engine_engine_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeTradeResponse.ProtoReflect.Descriptor instead.
func (*SubscribeTradeResponse) Descriptor() ([]byte, []int) {
	return file_engine_engine_proto_rawDescGZIP(), []int{13}
}

func (x *SubscribeTradeResponse) GetStatus() InternalEngineStatus {
	if x != nil {
		return x.Status
	}
	return InternalEngineStatus_INTERNAL_ENGINE__SUCCESS
}

func (m *SubscribeTradeResponse) GetMsg() isSubscribeTradeResponse_Msg {
	if m != nil {
		return m.Msg
	}
	return nil
}

func (x *SubscribeTradeResponse) GetTradeList() *TradeList {
	if x, ok := x.GetMsg().(*SubscribeTradeResponse_TradeList); ok {
		return x.TradeList
	}
	return nil
}

func (x *SubscribeTradeResponse) GetPing() *Ping {
	if x, ok := x.GetMsg().(*SubscribeTradeResponse_Ping); ok {
		return x.Ping
	}
	return nil
}

type isSubscribeTradeResponse_Msg interface {
	isSubscribeTradeResponse_Msg()
}

type SubscribeTradeResponse_TradeList struct {
	TradeList *TradeList `protobuf:"bytes,2,opt,name=trade_list,json=tradeList,proto3,oneof"`
}

type SubscribeTradeResponse_Ping struct {
	Ping *Ping `protobuf:"bytes,3,opt,name=ping,proto3,oneof"`
}

func (*SubscribeTradeResponse_TradeList) isSubscribeTradeResponse_Msg() {}

func (*SubscribeTradeResponse_Ping) isSubscribeTradeResponse_Msg() {}

type NewToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Price               float64 `protobuf:"fixed64,2,opt,name=price,proto3" json:"price,omitempty"`
	TokenName           string  `protobuf:"bytes,3,opt,name=token_name,json=tokenName,proto3" json:"token_name,omitempty"`
	CreateTime          int64   `protobuf:"varint,4,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	Liquidity           float64 `protobuf:"fixed64,5,opt,name=liquidity,proto3" json:"liquidity,omitempty"`
	Volume_24H          float64 `protobuf:"fixed64,6,opt,name=volume_24h,json=volume24h,proto3" json:"volume_24h,omitempty"`
	Increase_1H         float64 `protobuf:"fixed64,7,opt,name=increase_1h,json=increase1h,proto3" json:"increase_1h,omitempty"`
	TokenAddress        string  `protobuf:"bytes,8,opt,name=token_address,json=tokenAddress,proto3" json:"token_address,omitempty"`
	PairContractAddress string  `protobuf:"bytes,9,opt,name=pair_contract_address,json=pairContractAddress,proto3" json:"pair_contract_address,omitempty"`
	Dex                 *Dex    `protobuf:"bytes,10,opt,name=dex,proto3" json:"dex,omitempty"`
}

func (x *NewToken) Reset() {
	*x = NewToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_engine_engine_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewToken) ProtoMessage() {}

func (x *NewToken) ProtoReflect() protoreflect.Message {
	mi := &file_engine_engine_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewToken.ProtoReflect.Descriptor instead.
func (*NewToken) Descriptor() ([]byte, []int) {
	return file_engine_engine_proto_rawDescGZIP(), []int{14}
}

func (x *NewToken) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *NewToken) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *NewToken) GetTokenName() string {
	if x != nil {
		return x.TokenName
	}
	return ""
}

func (x *NewToken) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *NewToken) GetLiquidity() float64 {
	if x != nil {
		return x.Liquidity
	}
	return 0
}

func (x *NewToken) GetVolume_24H() float64 {
	if x != nil {
		return x.Volume_24H
	}
	return 0
}

func (x *NewToken) GetIncrease_1H() float64 {
	if x != nil {
		return x.Increase_1H
	}
	return 0
}

func (x *NewToken) GetTokenAddress() string {
	if x != nil {
		return x.TokenAddress
	}
	return ""
}

func (x *NewToken) GetPairContractAddress() string {
	if x != nil {
		return x.PairContractAddress
	}
	return ""
}

func (x *NewToken) GetDex() *Dex {
	if x != nil {
		return x.Dex
	}
	return nil
}

type NewTokenList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NewToken []*NewToken `protobuf:"bytes,1,rep,name=new_token,json=newToken,proto3" json:"new_token,omitempty"`
}

func (x *NewTokenList) Reset() {
	*x = NewTokenList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_engine_engine_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewTokenList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewTokenList) ProtoMessage() {}

func (x *NewTokenList) ProtoReflect() protoreflect.Message {
	mi := &file_engine_engine_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewTokenList.ProtoReflect.Descriptor instead.
func (*NewTokenList) Descriptor() ([]byte, []int) {
	return file_engine_engine_proto_rawDescGZIP(), []int{15}
}

func (x *NewTokenList) GetNewToken() []*NewToken {
	if x != nil {
		return x.NewToken
	}
	return nil
}

type SubscribeNewPairRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dex *Dex `protobuf:"bytes,1,opt,name=dex,proto3" json:"dex,omitempty"`
}

func (x *SubscribeNewPairRequest) Reset() {
	*x = SubscribeNewPairRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_engine_engine_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeNewPairRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeNewPairRequest) ProtoMessage() {}

func (x *SubscribeNewPairRequest) ProtoReflect() protoreflect.Message {
	mi := &file_engine_engine_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeNewPairRequest.ProtoReflect.Descriptor instead.
func (*SubscribeNewPairRequest) Descriptor() ([]byte, []int) {
	return file_engine_engine_proto_rawDescGZIP(), []int{16}
}

func (x *SubscribeNewPairRequest) GetDex() *Dex {
	if x != nil {
		return x.Dex
	}
	return nil
}

type SubscribeNewPairResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status InternalEngineStatus `protobuf:"varint,1,opt,name=status,proto3,enum=engine.api.InternalEngineStatus" json:"status,omitempty"`
	// Types that are assignable to Msg:
	//	*SubscribeNewPairResponse_NewTokenList
	//	*SubscribeNewPairResponse_Ping
	Msg isSubscribeNewPairResponse_Msg `protobuf_oneof:"msg"`
}

func (x *SubscribeNewPairResponse) Reset() {
	*x = SubscribeNewPairResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_engine_engine_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeNewPairResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeNewPairResponse) ProtoMessage() {}

func (x *SubscribeNewPairResponse) ProtoReflect() protoreflect.Message {
	mi := &file_engine_engine_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeNewPairResponse.ProtoReflect.Descriptor instead.
func (*SubscribeNewPairResponse) Descriptor() ([]byte, []int) {
	return file_engine_engine_proto_rawDescGZIP(), []int{17}
}

func (x *SubscribeNewPairResponse) GetStatus() InternalEngineStatus {
	if x != nil {
		return x.Status
	}
	return InternalEngineStatus_INTERNAL_ENGINE__SUCCESS
}

func (m *SubscribeNewPairResponse) GetMsg() isSubscribeNewPairResponse_Msg {
	if m != nil {
		return m.Msg
	}
	return nil
}

func (x *SubscribeNewPairResponse) GetNewTokenList() *NewTokenList {
	if x, ok := x.GetMsg().(*SubscribeNewPairResponse_NewTokenList); ok {
		return x.NewTokenList
	}
	return nil
}

func (x *SubscribeNewPairResponse) GetPing() *Ping {
	if x, ok := x.GetMsg().(*SubscribeNewPairResponse_Ping); ok {
		return x.Ping
	}
	return nil
}

type isSubscribeNewPairResponse_Msg interface {
	isSubscribeNewPairResponse_Msg()
}

type SubscribeNewPairResponse_NewTokenList struct {
	NewTokenList *NewTokenList `protobuf:"bytes,2,opt,name=new_token_list,json=newTokenList,proto3,oneof"`
}

type SubscribeNewPairResponse_Ping struct {
	Ping *Ping `protobuf:"bytes,3,opt,name=ping,proto3,oneof"`
}

func (*SubscribeNewPairResponse_NewTokenList) isSubscribeNewPairResponse_Msg() {}

func (*SubscribeNewPairResponse_Ping) isSubscribeNewPairResponse_Msg() {}

type GetKlineHistoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dex       *Dex      `protobuf:"bytes,1,opt,name=dex,proto3" json:"dex,omitempty"`
	Base      string    `protobuf:"bytes,2,opt,name=base,proto3" json:"base,omitempty"`
	Quote     string    `protobuf:"bytes,3,opt,name=quote,proto3" json:"quote,omitempty"`
	Dimension Dimension `protobuf:"varint,4,opt,name=dimension,proto3,enum=engine.api.Dimension" json:"dimension,omitempty"`
	TsStart   int64     `protobuf:"varint,5,opt,name=ts_start,json=tsStart,proto3" json:"ts_start,omitempty"`
	TsEnd     int64     `protobuf:"varint,6,opt,name=ts_end,json=tsEnd,proto3" json:"ts_end,omitempty"`
	Start     int64     `protobuf:"varint,7,opt,name=start,proto3" json:"start,omitempty"`
	Count     int64     `protobuf:"varint,8,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *GetKlineHistoryRequest) Reset() {
	*x = GetKlineHistoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_engine_engine_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetKlineHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKlineHistoryRequest) ProtoMessage() {}

func (x *GetKlineHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_engine_engine_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKlineHistoryRequest.ProtoReflect.Descriptor instead.
func (*GetKlineHistoryRequest) Descriptor() ([]byte, []int) {
	return file_engine_engine_proto_rawDescGZIP(), []int{18}
}

func (x *GetKlineHistoryRequest) GetDex() *Dex {
	if x != nil {
		return x.Dex
	}
	return nil
}

func (x *GetKlineHistoryRequest) GetBase() string {
	if x != nil {
		return x.Base
	}
	return ""
}

func (x *GetKlineHistoryRequest) GetQuote() string {
	if x != nil {
		return x.Quote
	}
	return ""
}

func (x *GetKlineHistoryRequest) GetDimension() Dimension {
	if x != nil {
		return x.Dimension
	}
	return Dimension_K1M
}

func (x *GetKlineHistoryRequest) GetTsStart() int64 {
	if x != nil {
		return x.TsStart
	}
	return 0
}

func (x *GetKlineHistoryRequest) GetTsEnd() int64 {
	if x != nil {
		return x.TsEnd
	}
	return 0
}

func (x *GetKlineHistoryRequest) GetStart() int64 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *GetKlineHistoryRequest) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type GetKlineHistoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status    InternalEngineStatus `protobuf:"varint,1,opt,name=status,proto3,enum=engine.api.InternalEngineStatus" json:"status,omitempty"`
	KlineList *KLineList           `protobuf:"bytes,2,opt,name=kline_list,json=klineList,proto3" json:"kline_list,omitempty"`
}

func (x *GetKlineHistoryResponse) Reset() {
	*x = GetKlineHistoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_engine_engine_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetKlineHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKlineHistoryResponse) ProtoMessage() {}

func (x *GetKlineHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_engine_engine_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKlineHistoryResponse.ProtoReflect.Descriptor instead.
func (*GetKlineHistoryResponse) Descriptor() ([]byte, []int) {
	return file_engine_engine_proto_rawDescGZIP(), []int{19}
}

func (x *GetKlineHistoryResponse) GetStatus() InternalEngineStatus {
	if x != nil {
		return x.Status
	}
	return InternalEngineStatus_INTERNAL_ENGINE__SUCCESS
}

func (x *GetKlineHistoryResponse) GetKlineList() *KLineList {
	if x != nil {
		return x.KlineList
	}
	return nil
}

type BasicInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseTokenAddress    string  `protobuf:"bytes,1,opt,name=base_token_address,json=baseTokenAddress,proto3" json:"base_token_address,omitempty"`
	PairContractAddress string  `protobuf:"bytes,2,opt,name=pair_contract_address,json=pairContractAddress,proto3" json:"pair_contract_address,omitempty"`
	Volume_24H          float64 `protobuf:"fixed64,3,opt,name=volume_24h,json=volume24h,proto3" json:"volume_24h,omitempty"`
	TotalTx             float64 `protobuf:"fixed64,4,opt,name=total_tx,json=totalTx,proto3" json:"total_tx,omitempty"`
	Holders             float64 `protobuf:"fixed64,5,opt,name=holders,proto3" json:"holders,omitempty"`
	Dex                 *Dex    `protobuf:"bytes,6,opt,name=dex,proto3" json:"dex,omitempty"`
}

func (x *BasicInfo) Reset() {
	*x = BasicInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_engine_engine_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BasicInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BasicInfo) ProtoMessage() {}

func (x *BasicInfo) ProtoReflect() protoreflect.Message {
	mi := &file_engine_engine_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BasicInfo.ProtoReflect.Descriptor instead.
func (*BasicInfo) Descriptor() ([]byte, []int) {
	return file_engine_engine_proto_rawDescGZIP(), []int{20}
}

func (x *BasicInfo) GetBaseTokenAddress() string {
	if x != nil {
		return x.BaseTokenAddress
	}
	return ""
}

func (x *BasicInfo) GetPairContractAddress() string {
	if x != nil {
		return x.PairContractAddress
	}
	return ""
}

func (x *BasicInfo) GetVolume_24H() float64 {
	if x != nil {
		return x.Volume_24H
	}
	return 0
}

func (x *BasicInfo) GetTotalTx() float64 {
	if x != nil {
		return x.TotalTx
	}
	return 0
}

func (x *BasicInfo) GetHolders() float64 {
	if x != nil {
		return x.Holders
	}
	return 0
}

func (x *BasicInfo) GetDex() *Dex {
	if x != nil {
		return x.Dex
	}
	return nil
}

type GetBasicInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dex              *Dex   `protobuf:"bytes,1,opt,name=dex,proto3" json:"dex,omitempty"`
	BaseToken        string `protobuf:"bytes,2,opt,name=base_token,json=baseToken,proto3" json:"base_token,omitempty"`
	BaseTokenAddress string `protobuf:"bytes,3,opt,name=base_token_address,json=baseTokenAddress,proto3" json:"base_token_address,omitempty"`
	QuoteToken       string `protobuf:"bytes,4,opt,name=quote_token,json=quoteToken,proto3" json:"quote_token,omitempty"`
}

func (x *GetBasicInfoRequest) Reset() {
	*x = GetBasicInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_engine_engine_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBasicInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBasicInfoRequest) ProtoMessage() {}

func (x *GetBasicInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_engine_engine_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBasicInfoRequest.ProtoReflect.Descriptor instead.
func (*GetBasicInfoRequest) Descriptor() ([]byte, []int) {
	return file_engine_engine_proto_rawDescGZIP(), []int{21}
}

func (x *GetBasicInfoRequest) GetDex() *Dex {
	if x != nil {
		return x.Dex
	}
	return nil
}

func (x *GetBasicInfoRequest) GetBaseToken() string {
	if x != nil {
		return x.BaseToken
	}
	return ""
}

func (x *GetBasicInfoRequest) GetBaseTokenAddress() string {
	if x != nil {
		return x.BaseTokenAddress
	}
	return ""
}

func (x *GetBasicInfoRequest) GetQuoteToken() string {
	if x != nil {
		return x.QuoteToken
	}
	return ""
}

type GetBasicInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status    InternalEngineStatus `protobuf:"varint,1,opt,name=status,proto3,enum=engine.api.InternalEngineStatus" json:"status,omitempty"`
	BasicInfo *BasicInfo           `protobuf:"bytes,2,opt,name=basic_info,json=basicInfo,proto3" json:"basic_info,omitempty"`
}

func (x *GetBasicInfoResponse) Reset() {
	*x = GetBasicInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_engine_engine_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBasicInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBasicInfoResponse) ProtoMessage() {}

func (x *GetBasicInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_engine_engine_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBasicInfoResponse.ProtoReflect.Descriptor instead.
func (*GetBasicInfoResponse) Descriptor() ([]byte, []int) {
	return file_engine_engine_proto_rawDescGZIP(), []int{22}
}

func (x *GetBasicInfoResponse) GetStatus() InternalEngineStatus {
	if x != nil {
		return x.Status
	}
	return InternalEngineStatus_INTERNAL_ENGINE__SUCCESS
}

func (x *GetBasicInfoResponse) GetBasicInfo() *BasicInfo {
	if x != nil {
		return x.BasicInfo
	}
	return nil
}

type OnNewTradeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Direction    Direction `protobuf:"varint,1,opt,name=direction,proto3,enum=engine.api.Direction" json:"direction,omitempty"`
	PriceForUsdt float64   `protobuf:"fixed64,2,opt,name=price_for_usdt,json=priceForUsdt,proto3" json:"price_for_usdt,omitempty"`
	PriceForEth  float64   `protobuf:"fixed64,3,opt,name=price_for_eth,json=priceForEth,proto3" json:"price_for_eth,omitempty"`
	Amount0      float64   `protobuf:"fixed64,4,opt,name=amount0,proto3" json:"amount0,omitempty"`
	Amount1      float64   `protobuf:"fixed64,5,opt,name=amount1,proto3" json:"amount1,omitempty"`
	Ts           int64     `protobuf:"varint,6,opt,name=ts,proto3" json:"ts,omitempty"`
	Address0     string    `protobuf:"bytes,7,opt,name=address0,proto3" json:"address0,omitempty"`
	Token0       string    `protobuf:"bytes,8,opt,name=token0,proto3" json:"token0,omitempty"`
	Address1     string    `protobuf:"bytes,9,opt,name=address1,proto3" json:"address1,omitempty"`
	Token1       string    `protobuf:"bytes,10,opt,name=token1,proto3" json:"token1,omitempty"`
	TxHash       string    `protobuf:"bytes,11,opt,name=tx_hash,json=txHash,proto3" json:"tx_hash,omitempty"`
	TotalValue   float64   `protobuf:"fixed64,12,opt,name=total_value,json=totalValue,proto3" json:"total_value,omitempty"`
	Helder       int64     `protobuf:"varint,13,opt,name=helder,proto3" json:"helder,omitempty"`
	TxCount      int64     `protobuf:"varint,14,opt,name=tx_count,json=txCount,proto3" json:"tx_count,omitempty"`
	Dex          *Dex      `protobuf:"bytes,15,opt,name=dex,proto3" json:"dex,omitempty"`
}

func (x *OnNewTradeRequest) Reset() {
	*x = OnNewTradeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_engine_engine_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnNewTradeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnNewTradeRequest) ProtoMessage() {}

func (x *OnNewTradeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_engine_engine_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnNewTradeRequest.ProtoReflect.Descriptor instead.
func (*OnNewTradeRequest) Descriptor() ([]byte, []int) {
	return file_engine_engine_proto_rawDescGZIP(), []int{23}
}

func (x *OnNewTradeRequest) GetDirection() Direction {
	if x != nil {
		return x.Direction
	}
	return Direction_BUY
}

func (x *OnNewTradeRequest) GetPriceForUsdt() float64 {
	if x != nil {
		return x.PriceForUsdt
	}
	return 0
}

func (x *OnNewTradeRequest) GetPriceForEth() float64 {
	if x != nil {
		return x.PriceForEth
	}
	return 0
}

func (x *OnNewTradeRequest) GetAmount0() float64 {
	if x != nil {
		return x.Amount0
	}
	return 0
}

func (x *OnNewTradeRequest) GetAmount1() float64 {
	if x != nil {
		return x.Amount1
	}
	return 0
}

func (x *OnNewTradeRequest) GetTs() int64 {
	if x != nil {
		return x.Ts
	}
	return 0
}

func (x *OnNewTradeRequest) GetAddress0() string {
	if x != nil {
		return x.Address0
	}
	return ""
}

func (x *OnNewTradeRequest) GetToken0() string {
	if x != nil {
		return x.Token0
	}
	return ""
}

func (x *OnNewTradeRequest) GetAddress1() string {
	if x != nil {
		return x.Address1
	}
	return ""
}

func (x *OnNewTradeRequest) GetToken1() string {
	if x != nil {
		return x.Token1
	}
	return ""
}

func (x *OnNewTradeRequest) GetTxHash() string {
	if x != nil {
		return x.TxHash
	}
	return ""
}

func (x *OnNewTradeRequest) GetTotalValue() float64 {
	if x != nil {
		return x.TotalValue
	}
	return 0
}

func (x *OnNewTradeRequest) GetHelder() int64 {
	if x != nil {
		return x.Helder
	}
	return 0
}

func (x *OnNewTradeRequest) GetTxCount() int64 {
	if x != nil {
		return x.TxCount
	}
	return 0
}

func (x *OnNewTradeRequest) GetDex() *Dex {
	if x != nil {
		return x.Dex
	}
	return nil
}

type OnNewTradeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status InternalEngineStatus `protobuf:"varint,1,opt,name=status,proto3,enum=engine.api.InternalEngineStatus" json:"status,omitempty"`
}

func (x *OnNewTradeResponse) Reset() {
	*x = OnNewTradeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_engine_engine_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnNewTradeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnNewTradeResponse) ProtoMessage() {}

func (x *OnNewTradeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_engine_engine_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnNewTradeResponse.ProtoReflect.Descriptor instead.
func (*OnNewTradeResponse) Descriptor() ([]byte, []int) {
	return file_engine_engine_proto_rawDescGZIP(), []int{24}
}

func (x *OnNewTradeResponse) GetStatus() InternalEngineStatus {
	if x != nil {
		return x.Status
	}
	return InternalEngineStatus_INTERNAL_ENGINE__SUCCESS
}

type OnNewTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenName    string `protobuf:"bytes,1,opt,name=token_name,json=tokenName,proto3" json:"token_name,omitempty"`
	TokenAddress string `protobuf:"bytes,2,opt,name=token_address,json=tokenAddress,proto3" json:"token_address,omitempty"`
	Ts           int64  `protobuf:"varint,3,opt,name=ts,proto3" json:"ts,omitempty"`
	Dex          *Dex   `protobuf:"bytes,4,opt,name=dex,proto3" json:"dex,omitempty"`
}

func (x *OnNewTokenRequest) Reset() {
	*x = OnNewTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_engine_engine_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnNewTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnNewTokenRequest) ProtoMessage() {}

func (x *OnNewTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_engine_engine_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnNewTokenRequest.ProtoReflect.Descriptor instead.
func (*OnNewTokenRequest) Descriptor() ([]byte, []int) {
	return file_engine_engine_proto_rawDescGZIP(), []int{25}
}

func (x *OnNewTokenRequest) GetTokenName() string {
	if x != nil {
		return x.TokenName
	}
	return ""
}

func (x *OnNewTokenRequest) GetTokenAddress() string {
	if x != nil {
		return x.TokenAddress
	}
	return ""
}

func (x *OnNewTokenRequest) GetTs() int64 {
	if x != nil {
		return x.Ts
	}
	return 0
}

func (x *OnNewTokenRequest) GetDex() *Dex {
	if x != nil {
		return x.Dex
	}
	return nil
}

type OnNewTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status InternalEngineStatus `protobuf:"varint,1,opt,name=status,proto3,enum=engine.api.InternalEngineStatus" json:"status,omitempty"`
}

func (x *OnNewTokenResponse) Reset() {
	*x = OnNewTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_engine_engine_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnNewTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnNewTokenResponse) ProtoMessage() {}

func (x *OnNewTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_engine_engine_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnNewTokenResponse.ProtoReflect.Descriptor instead.
func (*OnNewTokenResponse) Descriptor() ([]byte, []int) {
	return file_engine_engine_proto_rawDescGZIP(), []int{26}
}

func (x *OnNewTokenResponse) GetStatus() InternalEngineStatus {
	if x != nil {
		return x.Status
	}
	return InternalEngineStatus_INTERNAL_ENGINE__SUCCESS
}

type SearchTokenResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenName    string  `protobuf:"bytes,1,opt,name=token_name,json=tokenName,proto3" json:"token_name,omitempty"`
	TokenAddress string  `protobuf:"bytes,2,opt,name=token_address,json=tokenAddress,proto3" json:"token_address,omitempty"`
	PriceUsdt    float64 `protobuf:"fixed64,3,opt,name=price_usdt,json=priceUsdt,proto3" json:"price_usdt,omitempty"`
	Increase_1D  float64 `protobuf:"fixed64,4,opt,name=increase_1d,json=increase1d,proto3" json:"increase_1d,omitempty"`
	Dex          *Dex    `protobuf:"bytes,5,opt,name=dex,proto3" json:"dex,omitempty"`
}

func (x *SearchTokenResult) Reset() {
	*x = SearchTokenResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_engine_engine_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchTokenResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchTokenResult) ProtoMessage() {}

func (x *SearchTokenResult) ProtoReflect() protoreflect.Message {
	mi := &file_engine_engine_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchTokenResult.ProtoReflect.Descriptor instead.
func (*SearchTokenResult) Descriptor() ([]byte, []int) {
	return file_engine_engine_proto_rawDescGZIP(), []int{27}
}

func (x *SearchTokenResult) GetTokenName() string {
	if x != nil {
		return x.TokenName
	}
	return ""
}

func (x *SearchTokenResult) GetTokenAddress() string {
	if x != nil {
		return x.TokenAddress
	}
	return ""
}

func (x *SearchTokenResult) GetPriceUsdt() float64 {
	if x != nil {
		return x.PriceUsdt
	}
	return 0
}

func (x *SearchTokenResult) GetIncrease_1D() float64 {
	if x != nil {
		return x.Increase_1D
	}
	return 0
}

func (x *SearchTokenResult) GetDex() *Dex {
	if x != nil {
		return x.Dex
	}
	return nil
}

type SearchTokenResultList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*SearchTokenResult `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
}

func (x *SearchTokenResultList) Reset() {
	*x = SearchTokenResultList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_engine_engine_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchTokenResultList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchTokenResultList) ProtoMessage() {}

func (x *SearchTokenResultList) ProtoReflect() protoreflect.Message {
	mi := &file_engine_engine_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchTokenResultList.ProtoReflect.Descriptor instead.
func (*SearchTokenResultList) Descriptor() ([]byte, []int) {
	return file_engine_engine_proto_rawDescGZIP(), []int{28}
}

func (x *SearchTokenResultList) GetResults() []*SearchTokenResult {
	if x != nil {
		return x.Results
	}
	return nil
}

type SearchTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenNameOrAddress string `protobuf:"bytes,1,opt,name=token_name_or_address,json=tokenNameOrAddress,proto3" json:"token_name_or_address,omitempty"`
}

func (x *SearchTokenRequest) Reset() {
	*x = SearchTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_engine_engine_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchTokenRequest) ProtoMessage() {}

func (x *SearchTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_engine_engine_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchTokenRequest.ProtoReflect.Descriptor instead.
func (*SearchTokenRequest) Descriptor() ([]byte, []int) {
	return file_engine_engine_proto_rawDescGZIP(), []int{29}
}

func (x *SearchTokenRequest) GetTokenNameOrAddress() string {
	if x != nil {
		return x.TokenNameOrAddress
	}
	return ""
}

type SearchTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status     InternalEngineStatus   `protobuf:"varint,1,opt,name=status,proto3,enum=engine.api.InternalEngineStatus" json:"status,omitempty"`
	ResultList *SearchTokenResultList `protobuf:"bytes,2,opt,name=result_list,json=resultList,proto3" json:"result_list,omitempty"`
}

func (x *SearchTokenResponse) Reset() {
	*x = SearchTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_engine_engine_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchTokenResponse) ProtoMessage() {}

func (x *SearchTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_engine_engine_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchTokenResponse.ProtoReflect.Descriptor instead.
func (*SearchTokenResponse) Descriptor() ([]byte, []int) {
	return file_engine_engine_proto_rawDescGZIP(), []int{30}
}

func (x *SearchTokenResponse) GetStatus() InternalEngineStatus {
	if x != nil {
		return x.Status
	}
	return InternalEngineStatus_INTERNAL_ENGINE__SUCCESS
}

func (x *SearchTokenResponse) GetResultList() *SearchTokenResultList {
	if x != nil {
		return x.ResultList
	}
	return nil
}

type OnPairSyncRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token0Name      string  `protobuf:"bytes,1,opt,name=token0_name,json=token0Name,proto3" json:"token0_name,omitempty"`
	Token0Address   string  `protobuf:"bytes,2,opt,name=token0_address,json=token0Address,proto3" json:"token0_address,omitempty"`
	Token1Name      string  `protobuf:"bytes,3,opt,name=token1_name,json=token1Name,proto3" json:"token1_name,omitempty"`
	Token1Address   string  `protobuf:"bytes,4,opt,name=token1_address,json=token1Address,proto3" json:"token1_address,omitempty"`
	Token0Amount    float64 `protobuf:"fixed64,5,opt,name=token0_amount,json=token0Amount,proto3" json:"token0_amount,omitempty"`
	Token1Amount    float64 `protobuf:"fixed64,6,opt,name=token1_amount,json=token1Amount,proto3" json:"token1_amount,omitempty"`
	Ts              int64   `protobuf:"varint,7,opt,name=ts,proto3" json:"ts,omitempty"`
	Value           float64 `protobuf:"fixed64,8,opt,name=value,proto3" json:"value,omitempty"`
	ContractAddress string  `protobuf:"bytes,9,opt,name=contract_address,json=contractAddress,proto3" json:"contract_address,omitempty"`
	Dex             *Dex    `protobuf:"bytes,10,opt,name=dex,proto3" json:"dex,omitempty"`
}

func (x *OnPairSyncRequest) Reset() {
	*x = OnPairSyncRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_engine_engine_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnPairSyncRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnPairSyncRequest) ProtoMessage() {}

func (x *OnPairSyncRequest) ProtoReflect() protoreflect.Message {
	mi := &file_engine_engine_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnPairSyncRequest.ProtoReflect.Descriptor instead.
func (*OnPairSyncRequest) Descriptor() ([]byte, []int) {
	return file_engine_engine_proto_rawDescGZIP(), []int{31}
}

func (x *OnPairSyncRequest) GetToken0Name() string {
	if x != nil {
		return x.Token0Name
	}
	return ""
}

func (x *OnPairSyncRequest) GetToken0Address() string {
	if x != nil {
		return x.Token0Address
	}
	return ""
}

func (x *OnPairSyncRequest) GetToken1Name() string {
	if x != nil {
		return x.Token1Name
	}
	return ""
}

func (x *OnPairSyncRequest) GetToken1Address() string {
	if x != nil {
		return x.Token1Address
	}
	return ""
}

func (x *OnPairSyncRequest) GetToken0Amount() float64 {
	if x != nil {
		return x.Token0Amount
	}
	return 0
}

func (x *OnPairSyncRequest) GetToken1Amount() float64 {
	if x != nil {
		return x.Token1Amount
	}
	return 0
}

func (x *OnPairSyncRequest) GetTs() int64 {
	if x != nil {
		return x.Ts
	}
	return 0
}

func (x *OnPairSyncRequest) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *OnPairSyncRequest) GetContractAddress() string {
	if x != nil {
		return x.ContractAddress
	}
	return ""
}

func (x *OnPairSyncRequest) GetDex() *Dex {
	if x != nil {
		return x.Dex
	}
	return nil
}

type OnPairSyncResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status InternalEngineStatus `protobuf:"varint,1,opt,name=status,proto3,enum=engine.api.InternalEngineStatus" json:"status,omitempty"`
}

func (x *OnPairSyncResponse) Reset() {
	*x = OnPairSyncResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_engine_engine_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnPairSyncResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnPairSyncResponse) ProtoMessage() {}

func (x *OnPairSyncResponse) ProtoReflect() protoreflect.Message {
	mi := &file_engine_engine_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnPairSyncResponse.ProtoReflect.Descriptor instead.
func (*OnPairSyncResponse) Descriptor() ([]byte, []int) {
	return file_engine_engine_proto_rawDescGZIP(), []int{32}
}

func (x *OnPairSyncResponse) GetStatus() InternalEngineStatus {
	if x != nil {
		return x.Status
	}
	return InternalEngineStatus_INTERNAL_ENGINE__SUCCESS
}

var File_engine_engine_proto protoreflect.FileDescriptor

var file_engine_engine_proto_rawDesc = []byte{
	0x0a, 0x13, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2f, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x61, 0x70,
	0x69, 0x22, 0x47, 0x0a, 0x03, 0x44, 0x65, 0x78, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x10,
	0x0a, 0x03, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x65, 0x78,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x48, 0x0a, 0x04, 0x50, 0x69,
	0x6e, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d,
	0x70, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0x91, 0x02, 0x0a, 0x03, 0x48, 0x6f, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6e, 0x63, 0x72, 0x65, 0x61,
	0x73, 0x65, 0x5f, 0x32, 0x34, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x69, 0x6e,
	0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x32, 0x34, 0x68, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x63,
	0x72, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x37, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a,
	0x69, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x37, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6e,
	0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x33, 0x30, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x0b, 0x69, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x33, 0x30, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x76,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x03, 0x64, 0x65, 0x78, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x44, 0x65, 0x78, 0x52, 0x03, 0x64, 0x65, 0x78, 0x22, 0x2c, 0x0a, 0x07, 0x48, 0x6f, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x03, 0x68, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x48, 0x6f,
	0x74, 0x52, 0x03, 0x68, 0x6f, 0x74, 0x22, 0x15, 0x0a, 0x13, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x48, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xb1, 0x01,
	0x0a, 0x14, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x48, 0x6f, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x6e, 0x67, 0x69,
	0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x30, 0x0a, 0x08, 0x68, 0x6f, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x48, 0x6f, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x00, 0x52, 0x07, 0x68, 0x6f, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x26, 0x0a, 0x04, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x69,
	0x6e, 0x67, 0x48, 0x00, 0x52, 0x04, 0x70, 0x69, 0x6e, 0x67, 0x42, 0x05, 0x0a, 0x03, 0x6d, 0x73,
	0x67, 0x22, 0xe2, 0x02, 0x0a, 0x05, 0x4b, 0x4c, 0x69, 0x6e, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74,
	0x69, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x61,
	0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71,
	0x75, 0x6f, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6c, 0x6f, 0x73,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x6c, 0x6f, 0x77, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6c, 0x6f, 0x77,
	0x12, 0x12, 0x0a, 0x04, 0x68, 0x69, 0x67, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04,
	0x68, 0x69, 0x67, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x76, 0x6f,
	0x6c, 0x75, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x69, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x61, 0x6d, 0x70, 0x6c, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x09, 0x61, 0x6d, 0x70, 0x6c, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x33,
	0x0a, 0x09, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x15, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44,
	0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x03, 0x64, 0x65, 0x78, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x65,
	0x78, 0x52, 0x03, 0x64, 0x65, 0x78, 0x22, 0x34, 0x0a, 0x09, 0x4b, 0x4c, 0x69, 0x6e, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x05, 0x6b, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x4b, 0x4c, 0x69, 0x6e, 0x65, 0x52, 0x05, 0x6b, 0x6c, 0x69, 0x6e, 0x65, 0x22, 0xaf, 0x01, 0x0a,
	0x15, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4b, 0x6c, 0x69, 0x6e, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x61, 0x73, 0x65,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x71, 0x75, 0x6f, 0x74,
	0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x33, 0x0a, 0x09, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x65, 0x6e, 0x67, 0x69,
	0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x09, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x03, 0x64,
	0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e,
	0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x78, 0x52, 0x03, 0x64, 0x65, 0x78, 0x22, 0xb9,
	0x01, 0x0a, 0x16, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4b, 0x6c, 0x69, 0x6e,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x65, 0x6e, 0x67, 0x69,
	0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45,
	0x6e, 0x67, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x36, 0x0a, 0x0a, 0x6b, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4b, 0x4c, 0x69, 0x6e, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x00,
	0x52, 0x09, 0x6b, 0x6c, 0x69, 0x6e, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x04, 0x70,
	0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x65, 0x6e, 0x67, 0x69,
	0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x04, 0x70,
	0x69, 0x6e, 0x67, 0x42, 0x05, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x22, 0xfa, 0x01, 0x0a, 0x05, 0x54,
	0x72, 0x61, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70,
	0x12, 0x17, 0x0a, 0x07, 0x74, 0x78, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x5f, 0x75, 0x73, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x55, 0x73, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f,
	0x65, 0x74, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x45, 0x74, 0x68, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x21, 0x0a, 0x03, 0x64, 0x65, 0x78, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44,
	0x65, 0x78, 0x52, 0x03, 0x64, 0x65, 0x78, 0x22, 0x34, 0x0a, 0x09, 0x54, 0x72, 0x61, 0x64, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x05, 0x74, 0x72, 0x61, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52, 0x05, 0x74, 0x72, 0x61, 0x64, 0x65, 0x22, 0x7a, 0x0a,
	0x15, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x03, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x44, 0x65, 0x78, 0x52, 0x03, 0x64, 0x65, 0x78, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x61, 0x73,
	0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62,
	0x61, 0x73, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x71, 0x75, 0x6f, 0x74,
	0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x71,
	0x75, 0x6f, 0x74, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xb9, 0x01, 0x0a, 0x16, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x36,
	0x0a, 0x0a, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x54, 0x72, 0x61, 0x64, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x00, 0x52, 0x09, 0x74, 0x72, 0x61,
	0x64, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x04, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x04, 0x70, 0x69, 0x6e, 0x67, 0x42, 0x05,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x22, 0xca, 0x02, 0x0a, 0x08, 0x4e, 0x65, 0x77, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x69, 0x71, 0x75,
	0x69, 0x64, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x6c, 0x69, 0x71,
	0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65,
	0x5f, 0x32, 0x34, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x76, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x32, 0x34, 0x68, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73,
	0x65, 0x5f, 0x31, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x69, 0x6e, 0x63, 0x72,
	0x65, 0x61, 0x73, 0x65, 0x31, 0x68, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x32, 0x0a, 0x15, 0x70,
	0x61, 0x69, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x70, 0x61, 0x69, 0x72,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x21, 0x0a, 0x03, 0x64, 0x65, 0x78, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x65,
	0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x78, 0x52, 0x03, 0x64,
	0x65, 0x78, 0x22, 0x41, 0x0a, 0x0c, 0x4e, 0x65, 0x77, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x31, 0x0a, 0x09, 0x6e, 0x65, 0x77, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x4e, 0x65, 0x77, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x08, 0x6e, 0x65, 0x77,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x3c, 0x0a, 0x17, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x4e, 0x65, 0x77, 0x50, 0x61, 0x69, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x21, 0x0a, 0x03, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x78, 0x52, 0x03,
	0x64, 0x65, 0x78, 0x22, 0xc5, 0x01, 0x0a, 0x18, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x4e, 0x65, 0x77, 0x50, 0x61, 0x69, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x38, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x20, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x40, 0x0a, 0x0e, 0x6e, 0x65,
	0x77, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x4e, 0x65, 0x77, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0c,
	0x6e, 0x65, 0x77, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x04,
	0x70, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x65, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x04,
	0x70, 0x69, 0x6e, 0x67, 0x42, 0x05, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x22, 0xf8, 0x01, 0x0a, 0x16,
	0x47, 0x65, 0x74, 0x4b, 0x6c, 0x69, 0x6e, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x03, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x44, 0x65, 0x78, 0x52, 0x03, 0x64, 0x65, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x61, 0x73,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75,
	0x6f, 0x74, 0x65, 0x12, 0x33, 0x0a, 0x09, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x64,
	0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x73, 0x5f, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x74, 0x73, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x73, 0x5f, 0x65, 0x6e, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x73, 0x45, 0x6e, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x89, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4b, 0x6c,
	0x69, 0x6e, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x38, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x20, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x34, 0x0a, 0x0a,
	0x6b, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4b, 0x4c,
	0x69, 0x6e, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x09, 0x6b, 0x6c, 0x69, 0x6e, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x22, 0xe4, 0x01, 0x0a, 0x09, 0x42, 0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x2c, 0x0a, 0x12, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x62, 0x61,
	0x73, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x32,
	0x0a, 0x15, 0x70, 0x61, 0x69, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x70,
	0x61, 0x69, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x5f, 0x32, 0x34, 0x68,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x32, 0x34,
	0x68, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x74, 0x78, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x07, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x78, 0x12, 0x18, 0x0a, 0x07,
	0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x68,
	0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x12, 0x21, 0x0a, 0x03, 0x64, 0x65, 0x78, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x44, 0x65, 0x78, 0x52, 0x03, 0x64, 0x65, 0x78, 0x22, 0xa6, 0x01, 0x0a, 0x13, 0x47, 0x65,
	0x74, 0x42, 0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x21, 0x0a, 0x03, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x78, 0x52,
	0x03, 0x64, 0x65, 0x78, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x61, 0x73, 0x65, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x2c, 0x0a, 0x12, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x62, 0x61, 0x73, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x22, 0x86, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x42, 0x61, 0x73, 0x69, 0x63, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x65, 0x6e,
	0x67, 0x69, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x34, 0x0a, 0x0a, 0x62, 0x61, 0x73, 0x69, 0x63, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x6e, 0x67, 0x69,
	0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x09, 0x62, 0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xce, 0x03, 0x0a, 0x11,
	0x4f, 0x6e, 0x4e, 0x65, 0x77, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x33, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0e, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f,
	0x66, 0x6f, 0x72, 0x5f, 0x75, 0x73, 0x64, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x46, 0x6f, 0x72, 0x55, 0x73, 0x64, 0x74, 0x12, 0x22, 0x0a, 0x0d,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x65, 0x74, 0x68, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x0b, 0x70, 0x72, 0x69, 0x63, 0x65, 0x46, 0x6f, 0x72, 0x45, 0x74, 0x68,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x30, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x07, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x30, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x31, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x31, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x74, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x30,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x30,
	0x12, 0x16, 0x0a, 0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x30, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x30, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x31, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x31, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x31, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x31, 0x12, 0x17, 0x0a, 0x07,
	0x74, 0x78, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74,
	0x78, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x6c, 0x64, 0x65, 0x72,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x68, 0x65, 0x6c, 0x64, 0x65, 0x72, 0x12, 0x19,
	0x0a, 0x08, 0x74, 0x78, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x74, 0x78, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x03, 0x64, 0x65, 0x78,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x78, 0x52, 0x03, 0x64, 0x65, 0x78, 0x22, 0x4e, 0x0a, 0x12,
	0x4f, 0x6e, 0x4e, 0x65, 0x77, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x38, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x20, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x8a, 0x01, 0x0a,
	0x11, 0x4f, 0x6e, 0x4e, 0x65, 0x77, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x74, 0x73, 0x12, 0x21, 0x0a, 0x03, 0x64, 0x65, 0x78, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x44, 0x65, 0x78, 0x52, 0x03, 0x64, 0x65, 0x78, 0x22, 0x4e, 0x0a, 0x12, 0x4f, 0x6e, 0x4e,
	0x65, 0x77, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x38, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x20, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xba, 0x01, 0x0a, 0x11, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x75, 0x73, 0x64,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x70, 0x72, 0x69, 0x63, 0x65, 0x55, 0x73,
	0x64, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x31,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x69, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73,
	0x65, 0x31, 0x64, 0x12, 0x21, 0x0a, 0x03, 0x64, 0x65, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x65,
	0x78, 0x52, 0x03, 0x64, 0x65, 0x78, 0x22, 0x50, 0x0a, 0x15, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x37, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52,
	0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x22, 0x47, 0x0a, 0x12, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31,
	0x0a, 0x15, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x6f, 0x72, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x4f, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x22, 0x93, 0x01, 0x0a, 0x13, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x65, 0x6e, 0x67, 0x69,
	0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45,
	0x6e, 0x67, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x42, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e,
	0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x0a, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xe1, 0x02, 0x0a, 0x11, 0x4f, 0x6e, 0x50, 0x61,
	0x69, 0x72, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a,
	0x0b, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x30, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x30, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25,
	0x0a, 0x0e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x30, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x30, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x31, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x31, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x31,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x31, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x23, 0x0a,
	0x0d, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x30, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x30, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x31, 0x5f, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x31, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x73, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x29, 0x0a,
	0x10, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x21, 0x0a, 0x03, 0x64, 0x65, 0x78, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x44, 0x65, 0x78, 0x52, 0x03, 0x64, 0x65, 0x78, 0x22, 0x4e, 0x0a, 0x12, 0x4f,
	0x6e, 0x50, 0x61, 0x69, 0x72, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x38, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x20, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2a, 0x50, 0x0a, 0x14, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x18, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x5f,
	0x45, 0x4e, 0x47, 0x49, 0x4e, 0x45, 0x5f, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10,
	0x00, 0x12, 0x1a, 0x0a, 0x16, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x5f, 0x45, 0x4e,
	0x47, 0x49, 0x4e, 0x45, 0x5f, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x2a, 0x44, 0x0a,
	0x09, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x07, 0x0a, 0x03, 0x4b, 0x31,
	0x4d, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x4b, 0x35, 0x4d, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04,
	0x4b, 0x31, 0x35, 0x4d, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x4b, 0x33, 0x30, 0x4d, 0x10, 0x03,
	0x12, 0x07, 0x0a, 0x03, 0x4b, 0x31, 0x48, 0x10, 0x04, 0x12, 0x08, 0x0a, 0x04, 0x4b, 0x32, 0x34,
	0x48, 0x10, 0x05, 0x2a, 0x1e, 0x0a, 0x09, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x07, 0x0a, 0x03, 0x42, 0x55, 0x59, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x53, 0x45, 0x4c,
	0x4c, 0x10, 0x01, 0x32, 0xee, 0x06, 0x0a, 0x06, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x12, 0x55,
	0x0a, 0x0c, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x48, 0x6f, 0x74, 0x12, 0x1f,
	0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x48, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x20, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x48, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x5b, 0x0a, 0x0e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x4b, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x21, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4b, 0x6c,
	0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x65, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x4b, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x30, 0x01, 0x12, 0x5b, 0x0a, 0x0e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54,
	0x72, 0x61, 0x64, 0x65, 0x12, 0x21, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x72, 0x61, 0x64, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x72,
	0x61, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12,
	0x61, 0x0a, 0x10, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4e, 0x65, 0x77, 0x50,
	0x61, 0x69, 0x72, 0x12, 0x23, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4e, 0x65, 0x77, 0x50, 0x61, 0x69,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e,
	0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4e,
	0x65, 0x77, 0x50, 0x61, 0x69, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x30, 0x01, 0x12, 0x50, 0x0a, 0x0b, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x1e, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1f, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x5c, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4b, 0x6c, 0x69, 0x6e, 0x65,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x22, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x4b, 0x6c, 0x69, 0x6e, 0x65, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x65, 0x6e,
	0x67, 0x69, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x4b, 0x6c, 0x69, 0x6e,
	0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x53, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x42, 0x61, 0x73, 0x69, 0x63, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x1f, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x47, 0x65, 0x74, 0x42, 0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x47, 0x65, 0x74, 0x42, 0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x0a, 0x4f, 0x6e, 0x4e, 0x65, 0x77,
	0x54, 0x72, 0x61, 0x64, 0x65, 0x12, 0x1d, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x4f, 0x6e, 0x4e, 0x65, 0x77, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x4f, 0x6e, 0x4e, 0x65, 0x77, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x0a, 0x4f, 0x6e, 0x4e, 0x65, 0x77, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1d, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x4f, 0x6e, 0x4e, 0x65, 0x77, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x4f, 0x6e, 0x4e, 0x65, 0x77, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x0a, 0x4f, 0x6e, 0x50, 0x61, 0x69, 0x72, 0x53,
	0x79, 0x6e, 0x63, 0x12, 0x1d, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x4f, 0x6e, 0x50, 0x61, 0x69, 0x72, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x4f, 0x6e, 0x50, 0x61, 0x69, 0x72, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x42, 0x0d, 0x5a, 0x0b, 0x2e, 0x2f, 0x3b, 0x65, 0x6e, 0x67, 0x69, 0x6e,
	0x65, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_engine_engine_proto_rawDescOnce sync.Once
	file_engine_engine_proto_rawDescData = file_engine_engine_proto_rawDesc
)

func file_engine_engine_proto_rawDescGZIP() []byte {
	file_engine_engine_proto_rawDescOnce.Do(func() {
		file_engine_engine_proto_rawDescData = protoimpl.X.CompressGZIP(file_engine_engine_proto_rawDescData)
	})
	return file_engine_engine_proto_rawDescData
}

var file_engine_engine_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_engine_engine_proto_msgTypes = make([]protoimpl.MessageInfo, 33)
var file_engine_engine_proto_goTypes = []interface{}{
	(InternalEngineStatus)(0),        // 0: engine.api.InternalEngineStatus
	(Dimension)(0),                   // 1: engine.api.Dimension
	(Direction)(0),                   // 2: engine.api.Direction
	(*Dex)(nil),                      // 3: engine.api.Dex
	(*Ping)(nil),                     // 4: engine.api.Ping
	(*Hot)(nil),                      // 5: engine.api.Hot
	(*HotList)(nil),                  // 6: engine.api.HotList
	(*SubscribeHotRequest)(nil),      // 7: engine.api.SubscribeHotRequest
	(*SubscribeHotResponse)(nil),     // 8: engine.api.SubscribeHotResponse
	(*KLine)(nil),                    // 9: engine.api.KLine
	(*KLineList)(nil),                // 10: engine.api.KLineList
	(*SubscribeKlineRequest)(nil),    // 11: engine.api.SubscribeKlineRequest
	(*SubscribeKlineResponse)(nil),   // 12: engine.api.SubscribeKlineResponse
	(*Trade)(nil),                    // 13: engine.api.Trade
	(*TradeList)(nil),                // 14: engine.api.TradeList
	(*SubscribeTradeRequest)(nil),    // 15: engine.api.SubscribeTradeRequest
	(*SubscribeTradeResponse)(nil),   // 16: engine.api.SubscribeTradeResponse
	(*NewToken)(nil),                 // 17: engine.api.NewToken
	(*NewTokenList)(nil),             // 18: engine.api.NewTokenList
	(*SubscribeNewPairRequest)(nil),  // 19: engine.api.SubscribeNewPairRequest
	(*SubscribeNewPairResponse)(nil), // 20: engine.api.SubscribeNewPairResponse
	(*GetKlineHistoryRequest)(nil),   // 21: engine.api.GetKlineHistoryRequest
	(*GetKlineHistoryResponse)(nil),  // 22: engine.api.GetKlineHistoryResponse
	(*BasicInfo)(nil),                // 23: engine.api.BasicInfo
	(*GetBasicInfoRequest)(nil),      // 24: engine.api.GetBasicInfoRequest
	(*GetBasicInfoResponse)(nil),     // 25: engine.api.GetBasicInfoResponse
	(*OnNewTradeRequest)(nil),        // 26: engine.api.OnNewTradeRequest
	(*OnNewTradeResponse)(nil),       // 27: engine.api.OnNewTradeResponse
	(*OnNewTokenRequest)(nil),        // 28: engine.api.OnNewTokenRequest
	(*OnNewTokenResponse)(nil),       // 29: engine.api.OnNewTokenResponse
	(*SearchTokenResult)(nil),        // 30: engine.api.SearchTokenResult
	(*SearchTokenResultList)(nil),    // 31: engine.api.SearchTokenResultList
	(*SearchTokenRequest)(nil),       // 32: engine.api.SearchTokenRequest
	(*SearchTokenResponse)(nil),      // 33: engine.api.SearchTokenResponse
	(*OnPairSyncRequest)(nil),        // 34: engine.api.OnPairSyncRequest
	(*OnPairSyncResponse)(nil),       // 35: engine.api.OnPairSyncResponse
}
var file_engine_engine_proto_depIdxs = []int32{
	3,  // 0: engine.api.Hot.dex:type_name -> engine.api.Dex
	5,  // 1: engine.api.HotList.hot:type_name -> engine.api.Hot
	0,  // 2: engine.api.SubscribeHotResponse.status:type_name -> engine.api.InternalEngineStatus
	6,  // 3: engine.api.SubscribeHotResponse.hot_list:type_name -> engine.api.HotList
	4,  // 4: engine.api.SubscribeHotResponse.ping:type_name -> engine.api.Ping
	1,  // 5: engine.api.KLine.dimension:type_name -> engine.api.Dimension
	3,  // 6: engine.api.KLine.dex:type_name -> engine.api.Dex
	9,  // 7: engine.api.KLineList.kline:type_name -> engine.api.KLine
	1,  // 8: engine.api.SubscribeKlineRequest.dimension:type_name -> engine.api.Dimension
	3,  // 9: engine.api.SubscribeKlineRequest.dex:type_name -> engine.api.Dex
	0,  // 10: engine.api.SubscribeKlineResponse.status:type_name -> engine.api.InternalEngineStatus
	10, // 11: engine.api.SubscribeKlineResponse.kline_list:type_name -> engine.api.KLineList
	4,  // 12: engine.api.SubscribeKlineResponse.ping:type_name -> engine.api.Ping
	3,  // 13: engine.api.Trade.dex:type_name -> engine.api.Dex
	13, // 14: engine.api.TradeList.trade:type_name -> engine.api.Trade
	3,  // 15: engine.api.SubscribeTradeRequest.dex:type_name -> engine.api.Dex
	0,  // 16: engine.api.SubscribeTradeResponse.status:type_name -> engine.api.InternalEngineStatus
	14, // 17: engine.api.SubscribeTradeResponse.trade_list:type_name -> engine.api.TradeList
	4,  // 18: engine.api.SubscribeTradeResponse.ping:type_name -> engine.api.Ping
	3,  // 19: engine.api.NewToken.dex:type_name -> engine.api.Dex
	17, // 20: engine.api.NewTokenList.new_token:type_name -> engine.api.NewToken
	3,  // 21: engine.api.SubscribeNewPairRequest.dex:type_name -> engine.api.Dex
	0,  // 22: engine.api.SubscribeNewPairResponse.status:type_name -> engine.api.InternalEngineStatus
	18, // 23: engine.api.SubscribeNewPairResponse.new_token_list:type_name -> engine.api.NewTokenList
	4,  // 24: engine.api.SubscribeNewPairResponse.ping:type_name -> engine.api.Ping
	3,  // 25: engine.api.GetKlineHistoryRequest.dex:type_name -> engine.api.Dex
	1,  // 26: engine.api.GetKlineHistoryRequest.dimension:type_name -> engine.api.Dimension
	0,  // 27: engine.api.GetKlineHistoryResponse.status:type_name -> engine.api.InternalEngineStatus
	10, // 28: engine.api.GetKlineHistoryResponse.kline_list:type_name -> engine.api.KLineList
	3,  // 29: engine.api.BasicInfo.dex:type_name -> engine.api.Dex
	3,  // 30: engine.api.GetBasicInfoRequest.dex:type_name -> engine.api.Dex
	0,  // 31: engine.api.GetBasicInfoResponse.status:type_name -> engine.api.InternalEngineStatus
	23, // 32: engine.api.GetBasicInfoResponse.basic_info:type_name -> engine.api.BasicInfo
	2,  // 33: engine.api.OnNewTradeRequest.direction:type_name -> engine.api.Direction
	3,  // 34: engine.api.OnNewTradeRequest.dex:type_name -> engine.api.Dex
	0,  // 35: engine.api.OnNewTradeResponse.status:type_name -> engine.api.InternalEngineStatus
	3,  // 36: engine.api.OnNewTokenRequest.dex:type_name -> engine.api.Dex
	0,  // 37: engine.api.OnNewTokenResponse.status:type_name -> engine.api.InternalEngineStatus
	3,  // 38: engine.api.SearchTokenResult.dex:type_name -> engine.api.Dex
	30, // 39: engine.api.SearchTokenResultList.results:type_name -> engine.api.SearchTokenResult
	0,  // 40: engine.api.SearchTokenResponse.status:type_name -> engine.api.InternalEngineStatus
	31, // 41: engine.api.SearchTokenResponse.result_list:type_name -> engine.api.SearchTokenResultList
	3,  // 42: engine.api.OnPairSyncRequest.dex:type_name -> engine.api.Dex
	0,  // 43: engine.api.OnPairSyncResponse.status:type_name -> engine.api.InternalEngineStatus
	7,  // 44: engine.api.Engine.SubscribeHot:input_type -> engine.api.SubscribeHotRequest
	11, // 45: engine.api.Engine.SubscribeKline:input_type -> engine.api.SubscribeKlineRequest
	15, // 46: engine.api.Engine.SubscribeTrade:input_type -> engine.api.SubscribeTradeRequest
	19, // 47: engine.api.Engine.SubscribeNewPair:input_type -> engine.api.SubscribeNewPairRequest
	32, // 48: engine.api.Engine.SearchToken:input_type -> engine.api.SearchTokenRequest
	21, // 49: engine.api.Engine.GetKlineHistory:input_type -> engine.api.GetKlineHistoryRequest
	24, // 50: engine.api.Engine.GetBasicInfo:input_type -> engine.api.GetBasicInfoRequest
	26, // 51: engine.api.Engine.OnNewTrade:input_type -> engine.api.OnNewTradeRequest
	28, // 52: engine.api.Engine.OnNewToken:input_type -> engine.api.OnNewTokenRequest
	34, // 53: engine.api.Engine.OnPairSync:input_type -> engine.api.OnPairSyncRequest
	8,  // 54: engine.api.Engine.SubscribeHot:output_type -> engine.api.SubscribeHotResponse
	12, // 55: engine.api.Engine.SubscribeKline:output_type -> engine.api.SubscribeKlineResponse
	16, // 56: engine.api.Engine.SubscribeTrade:output_type -> engine.api.SubscribeTradeResponse
	20, // 57: engine.api.Engine.SubscribeNewPair:output_type -> engine.api.SubscribeNewPairResponse
	33, // 58: engine.api.Engine.SearchToken:output_type -> engine.api.SearchTokenResponse
	22, // 59: engine.api.Engine.GetKlineHistory:output_type -> engine.api.GetKlineHistoryResponse
	25, // 60: engine.api.Engine.GetBasicInfo:output_type -> engine.api.GetBasicInfoResponse
	27, // 61: engine.api.Engine.OnNewTrade:output_type -> engine.api.OnNewTradeResponse
	29, // 62: engine.api.Engine.OnNewToken:output_type -> engine.api.OnNewTokenResponse
	35, // 63: engine.api.Engine.OnPairSync:output_type -> engine.api.OnPairSyncResponse
	54, // [54:64] is the sub-list for method output_type
	44, // [44:54] is the sub-list for method input_type
	44, // [44:44] is the sub-list for extension type_name
	44, // [44:44] is the sub-list for extension extendee
	0,  // [0:44] is the sub-list for field type_name
}

func init() { file_engine_engine_proto_init() }
func file_engine_engine_proto_init() {
	if File_engine_engine_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_engine_engine_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Dex); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_engine_engine_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ping); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_engine_engine_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Hot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_engine_engine_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HotList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_engine_engine_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeHotRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_engine_engine_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeHotResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_engine_engine_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KLine); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_engine_engine_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KLineList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_engine_engine_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeKlineRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_engine_engine_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeKlineResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_engine_engine_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Trade); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_engine_engine_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TradeList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_engine_engine_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeTradeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_engine_engine_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeTradeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_engine_engine_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_engine_engine_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewTokenList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_engine_engine_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeNewPairRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_engine_engine_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeNewPairResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_engine_engine_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetKlineHistoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_engine_engine_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetKlineHistoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_engine_engine_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BasicInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_engine_engine_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBasicInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_engine_engine_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBasicInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_engine_engine_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnNewTradeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_engine_engine_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnNewTradeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_engine_engine_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnNewTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_engine_engine_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnNewTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_engine_engine_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchTokenResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_engine_engine_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchTokenResultList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_engine_engine_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_engine_engine_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_engine_engine_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnPairSyncRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_engine_engine_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnPairSyncResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_engine_engine_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*SubscribeHotResponse_HotList)(nil),
		(*SubscribeHotResponse_Ping)(nil),
	}
	file_engine_engine_proto_msgTypes[9].OneofWrappers = []interface{}{
		(*SubscribeKlineResponse_KlineList)(nil),
		(*SubscribeKlineResponse_Ping)(nil),
	}
	file_engine_engine_proto_msgTypes[13].OneofWrappers = []interface{}{
		(*SubscribeTradeResponse_TradeList)(nil),
		(*SubscribeTradeResponse_Ping)(nil),
	}
	file_engine_engine_proto_msgTypes[17].OneofWrappers = []interface{}{
		(*SubscribeNewPairResponse_NewTokenList)(nil),
		(*SubscribeNewPairResponse_Ping)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_engine_engine_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   33,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_engine_engine_proto_goTypes,
		DependencyIndexes: file_engine_engine_proto_depIdxs,
		EnumInfos:         file_engine_engine_proto_enumTypes,
		MessageInfos:      file_engine_engine_proto_msgTypes,
	}.Build()
	File_engine_engine_proto = out.File
	file_engine_engine_proto_rawDesc = nil
	file_engine_engine_proto_goTypes = nil
	file_engine_engine_proto_depIdxs = nil
}
